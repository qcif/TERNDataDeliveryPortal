<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

   <!--
    A Geohash is a compact representation of a latitude longitude pair in a single field.
    See http://wiki.apache.org/solr/SpatialSearch
   -->
    <fieldtype name="geohash" class="solr.GeoHashField"/>
 </types>


 <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a previously defined type from the 
       <types> section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.  
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This 
       will increase storage costs.
     default: a value that should be used if no value is specified
       when adding a document.
   -->
   
   <!-- 
   ANDS Indexed Field
   -->  
   
   <!-- Single Value Fields-->
   <field name="key" type="string" indexed="true" stored="true" required="true" /> 
   <field name="keyText" type="text" indexed="true" stored="true" required="true" /> 
   <field name="key_hash" type="string" indexed="true" stored="true" required="true" />
   <field name="url_slug" type="string" indexed="true" stored="true" required="false" />
   <field name="data_source_key_hash" type="string" indexed="true" stored="true" required="true" />
   <field name="status" type="string" indexed="true" stored="true"/>
   <field name="class" type="string" indexed="true" stored="true"/>
   <field name="reverse_links" type="string" indexed="true" stored="true"/>
   <field name="originating_source" type="string" indexed="true" stored="true"/>
   <field name="data_source_key" type="string" indexed="true" stored="true"/>
   
   <field name="date_modified" type="pdate" indexed="true" stored="true"/>
   
   <!-- Anything that starts with s_ is alpha only sort-->
   <field name="group" type="string" indexed="true" stored="true"/>
   <field name="s_group" type="alphaOnlySort" indexed="true"/>

   <field name="type" type="string" indexed="true" stored="true"/>
   <field name="s_type" type="alphaOnlySort" indexed="true"/>
   
   <!-- Search Base Score being a sortable int-->
   <field name="search_base_score" type="sint" indexed="true" stored="true"/>
   	
   <field name="flag" type="sint" indexed="true" stored="true"/>
    <field name="warning_count" type="sint" indexed="true" stored="true"/>
    <field name="error_count" type="sint" indexed="true" stored="true"/>
    <field name="manually_assessed_flag" type="sint" indexed="true" stored="true"/>
    <field name="gold_status_flag" type="sint" indexed="true" stored="true"/>
    <field name="quality_level" type="sint" indexed="true" stored="true"/>


    <field name="feed_type" type="string" indexed="true" stored="true"/>
   <field name="last_modified_by" type="string" indexed="true" stored="true"/>   

   <!-- Names-->
   <field name="display_title" type="text" indexed="true" stored="true"/>
   <field name="list_title" type="text" indexed="true" stored="true"/>
   <field name="s_list_title" type="alphaOnlySort" indexed="true" stored="false"/>
   <field name="alt_list_title" type="text" indexed="true" stored="true" multiValued="true"/>
   <field name="alt_display_title" type="text" indexed="true" stored="true" multiValued="true"/>


	<!-- Not sure what to use name part for, but leave for now-->
   <field name="name_part_type" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="name_part" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- Location all cramped into 1-->
   <field name="location" type="text" indexed="true" stored="true" multiValued="true"/>
   
   <!-- MultiValued relatedObjects -->
   <field name="related_object_key" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_class" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_type" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_list_title" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_display_title" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_relation" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_display_logo" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="related_object_relation_description" type="string" indexed="true" stored="true" multiValued="true"/>
  
   <!-- MultiValued Descriptions-->
   <field name="description_value" type="text" indexed="true" stored="true" multiValued="true"/>
   <field name="description_type" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- MultiValued Subjects-->
   <field name="subject_value_resolved" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="subject_value_unresolved" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="s_subject_value_resolved" type="alphaOnlySort" indexed="true" stored="false" multiValued="true"/>
   <field name="subject_type" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="subject_vocab_uri" type="string" indexed="true" stored="true" multiValued="true"/>
  
   <!-- MultiValued Broader Subjects-->
   <field name="broader_subject_value_resolved" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="broader_subject_value_unresolved" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="broader_subject_type" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="broader_subject_vocab_uri" type="string" indexed="true" stored="true" multiValued="true"/>

   <!-- Multivalued licence groups -->
   <field name="licence_group" type="string" indexed="true" stored="true" required="false" multiValued="true" />
   <!-- relatedInfo all cramped into 1-->
   <field name="related_info" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="date_from" type="int" indexed="true" stored="true" multiValued="true"/>
   <field name="date_to" type="int" indexed="true" stored="true" multiValued="true"/>

   <field name="identifier_value" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="identifier_type" type="string" indexed="true" stored="true" multiValued="true"/>

   <field name="spatial_coverage" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="spatial_coverage_center" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- END ANDS Indexed Field-->

    <!-- FOR Fields -->

 <field name="for_code_two" type="string" indexed="true" stored="true" multiValued="true"/>
 <field name="for_code_four" type="string" indexed="true" stored="true" multiValued="true"/> 
<field name="for_code_six" type="string" indexed="true" stored="true" multiValued="true"/>
<field name="for_value_two" type="string" indexed="true" stored="true" multiValued="true"/>
 <field name="for_value_four" type="string" indexed="true" stored="true" multiValued="true"/>
 <field name="for_value_six" type="string" indexed="true" stored="true" multiValued="true"/>
   <!-- catchall field, containing all other searchable text fields (implemented
        via copyField further on in this schema  -->
   <field name="text" type="text" indexed="true" stored="false" multiValued="true"/>
   <field name="fulltext" type="text" indexed="true" stored="false" multiValued="true"/>

   <!-- Uncommenting the following will create a "timestamp" field using
        a default value of "NOW" to indicate when each document was indexed.
     -->
   
   <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
    
   <!--TERN Regions Field -->
<field name="tern_region" type="string" indexed="true" stored="true" multiValued="true"/>
   
   <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
        will be used if the name matches any of the patterns.
        RESTRICTION: the glob-like pattern in the name attribute must have
        a "*" only at the start or the end.
        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
        Longer patterns will be matched first.  if equal size patterns
        both match, the first appearing in the schema will be used.  -->
   <dynamicField name="*_i"  type="int"    indexed="true"  stored="true"/>
   <dynamicField name="*_s"  type="string"  indexed="true"  stored="true"/>
   <dynamicField name="*_l"  type="long"   indexed="true"  stored="true"/>
   <dynamicField name="*_t"  type="text"    indexed="true"  stored="true"/>
   <dynamicField name="*_txt" type="text"    indexed="true"  stored="true" multiValued="true"/>
   <dynamicField name="*_b"  type="boolean" indexed="true"  stored="true"/>
   <dynamicField name="*_f"  type="float"  indexed="true"  stored="true"/>
   <dynamicField name="*_d"  type="double" indexed="true"  stored="true"/>

   <!-- Type used to index the lat and lon components for the "location" FieldType -->
   <dynamicField name="*_coordinate"  type="tdouble" indexed="true"  stored="false"/>

   <dynamicField name="*_dt" type="date"    indexed="true"  stored="true"/>
   <dynamicField name="*_p"  type="location" indexed="true" stored="true"/>

   <!-- some trie-coded dynamic fields for faster range queries -->
   <dynamicField name="*_ti" type="tint"    indexed="true"  stored="true"/>
   <dynamicField name="*_tl" type="tlong"   indexed="true"  stored="true"/>
   <dynamicField name="*_tf" type="tfloat"  indexed="true"  stored="true"/>
   <dynamicField name="*_td" type="tdouble" indexed="true"  stored="true"/>
   <dynamicField name="*_tdt" type="tdate"  indexed="true"  stored="true"/>

   <dynamicField name="*_pi"  type="pint"    indexed="true"  stored="true"/>

   <dynamicField name="ignored_*" type="ignored" multiValued="true"/>
   <dynamicField name="attr_*" type="textgen" indexed="true" stored="true" multiValued="true"/>


   <dynamicField name="random_*" type="random" />

   <!-- uncomment the following to ignore any fields that don't already match an existing 
        field name or dynamic field, rather than reporting them as an error. 
        alternately, change the type="ignored" to some other type e.g. "text" if you want 
        unknown fields indexed and/or stored by default -->
   <!--dynamicField name="*" type="ignored" multiValued="true" /-->

 </fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>key_hash</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>display_title</defaultSearchField>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="AND"/>

  <!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  -->

   <copyField source="*" dest="fulltext"/>
   <copyField source="key" dest="keyText"/>
   <copyField source="group" dest="s_group"/>
   <copyField source="type" dest="s_type"/>
   <copyField source="list_title" dest="s_list_title"/>
   <copyField source="subject_value_resolved" dest="s_subject_value_resolved"/>

   <!-- Above, multiple source fields are copied to the [text] field. 
          Another way to map multiple source fields to the same 
          destination field is to use the dynamic field syntax. 
          copyField also supports a maxChars to copy setting.  -->

   <!-- <copyField source="*_t" dest="text" maxChars="3000"/> -->

   <!-- copy name to alphaNameSort, a field designed for sorting by name -->
   <!-- <copyField source="name" dest="alphaNameSort"/> -->


 <!-- Similarity is the scoring routine for each document vs. a query.
      A custom similarity may be specified here, but the default is fine
      for most applications.  -->
 <!-- <similarity class="org.apache.lucene.search.DefaultSimilarity"/> -->
 <!-- ... OR ...
      Specify a SimilarityFactory class name implementation
      allowing parameters to be used.
 -->
 <!--
 <similarity class="com.example.solr.CustomSimilarityFactory">
   <str name="paramkey">param value</str>
 </similarity>
 -->
</schema>
